<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonReady.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3fVjwTB/AmXsTzIlUCrfAAAAAElFTkSuQmCC
</value>
  </data>
</root>